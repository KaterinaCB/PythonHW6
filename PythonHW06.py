# 1. Дан список:['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']. 
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками
# (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём
# до двух целочисленных разрядов: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
# Пример:
# в   5  часов  17  минут температура воздуха была   +5  градусов в "05" часов "17" минут температура воздуха была "+05" градусов

# start_txt = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

# txt_out = []
# for word in start_txt:
#     if word[-1] in '0123456789':
#         txt_out.append('"')
#         if len(word) == 1:
#             txt_out.append('0' + word)
#         elif len(word) == 2 and (word[0] not in '0123456789'):
#             txt_out.append(word[0] + '0' + word[-1])
#         elif word[0] not in '0123456789':
#             txt_out.append(word[0] + word)
#         else:
#             txt_out.append(word)
#         txt_out.append('"')
#     else:
#         txt_out.append(word)
# print(txt_out)

# txt_str = ''
# n = 1
# for i in range(len(txt_out)):
#     txt_str += txt_out[i]
#     if txt_out[i] == '"':
#         n += 1
#         if n % 2:
#             txt_str += ' '
#     elif txt_out[i][-1] not in '0123456789':
#         txt_str += ' '
# print(*txt_in)
# print(txt_str)


# Дан список, содержащий искажённые данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида:
# 'Привет, Игорь!'
# Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду.
# Можно ли при этом не создавать новый список?


# import random as rd

# first_list = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']

# name_list = []
# txt = []
# for i in range(len(first_list)):
#     txt = first_list[i].lower().split()
#     txt[-1] = txt[-1].capitalize()
#     name_list.append(txt[-1]) 
#     first_list[i] = ' '.join(txt)
# print(first_list) 

# hello_list = ['Привет,', 'Хорошего дня,', 'Удачи,', 'Вы молодец,']

# rd.shuffle(name_list)  
# rd.shuffle(hello_list)

# for i in range(len(hello_list)):
#     print(hello_list[i], name_list[i] + '!')


# Создать список, содержащий цены на товары (10–20 товаров), например: [57.8, 46.51, 97, ...]
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

import random as rd

price_list = []
for i in range(10):
    price_list.append(rd.randint(0, 10000) / 100)
print('Прайс: ', price_list)

for price in price_list:
    rub = str(int(price//1))
    if str(price)[-2] == '.':
        penny = str(price)[-1] + '0'
    else:
        penny = str(price)[-2] + str(price)[-1]
    print(rub + ' руб ' + penny + ' коп', end=', ') 
print()

new_price_list = price_list
new_price_list.sort()

print('Новый прайс: ', new_price_list)
new_price_list = [1]                        
print('Новый прайс: ', new_price_list)

print('Проверка равенства содержимого объектов: ', new_price_list == [1]) 
print('Проверка индентичности объектов: ', new_price_list is [1]) 

expensive_price_list = sorted(price_list, reverse=True)

print('Прайс с ценами по убыванию:', expensive_price_list)

print('Прайс пяти самых дорогих товаров', expensive_price_list[0:5])